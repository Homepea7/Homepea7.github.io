<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Homepea&#39;s Blog</title>
  <icon>https://homepea7.github.io/icon.png</icon>
  <subtitle>Good good study, day day up!</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://homepea7.github.io/"/>
  <updated>2020-05-05T01:41:08.000Z</updated>
  <id>https://homepea7.github.io/</id>
  
  <author>
    <name>Kavin Homepea</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hello World</title>
    <link href="https://homepea7.github.io/2020/01.hello-world/"/>
    <id>https://homepea7.github.io/2020/01.hello-world/</id>
    <published>2020-06-16T15:42:39.891Z</published>
    <updated>2020-05-05T01:41:08.000Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Quick-Start&quot;&gt;&lt;a href=&quot;#Quick-Start&quot; class=&quot;headerlink&quot; title=&quot;Quick Start&quot;&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;&lt;h3 id=&quot;Create-a-new-post&quot;&gt;&lt;a href=&quot;#Create-a-new-post&quot; class=&quot;headerlink&quot; title=&quot;Create a new post&quot;&gt;&lt;/a&gt;Create a new post&lt;/h3&gt;
    
    </summary>
    
    
      <category term="Hexo" scheme="https://Homepea7.github.io/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="https://Homepea7.github.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>使用Termux安装KODExplorer实现可以内网文件共享的文件服务器（UI简洁，代码高亮）</title>
    <link href="https://homepea7.github.io/2020/07.Termux+KODExplorer/"/>
    <id>https://homepea7.github.io/2020/07.Termux+KODExplorer/</id>
    <published>2020-06-16T15:42:39.431Z</published>
    <updated>2020-02-21T02:54:40.000Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;说明&quot;&gt;&lt;a href=&quot;#说明&quot; class=&quot;headerlink&quot; title=&quot;说明&quot;&gt;&lt;/a&gt;说明&lt;/h1&gt;&lt;p&gt;之前收手机端Termux安装的Ubuntu已经放在家里装路由器的盒子里面了，一般是不会在拿出来了，但是要写一些Python的代码，我又非常抵触VIM，怎么办呢？最近看到B站上面以为大佬的分享，搭建了KODExplorer文件服务器，在网页即可执行很多操作，而且他的编辑器支持代码高亮，局域网内的文件共享，视频在线播放等等一系列的功能，个人感觉非常好用，在这里做一个记录。&lt;/p&gt;
&lt;h1 id=&quot;安装前提&quot;&gt;&lt;a href=&quot;#安装前提&quot; class=&quot;headerlink&quot; title=&quot;安装前提&quot;&gt;&lt;/a&gt;安装前提&lt;/h1&gt;
    
    </summary>
    
    
      <category term="Termux" scheme="https://Homepea7.github.io/categories/Termux/"/>
    
    
      <category term="Termux" scheme="https://Homepea7.github.io/tags/Termux/"/>
    
      <category term="KODExplorer" scheme="https://Homepea7.github.io/tags/KODExplorer/"/>
    
      <category term="Git" scheme="https://Homepea7.github.io/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>C语言的一些基础知识</title>
    <link href="https://homepea7.github.io/2020/18.Basics%20of%20C/"/>
    <id>https://homepea7.github.io/2020/18.Basics%20of%20C/</id>
    <published>2020-06-10T09:03:51.000Z</published>
    <updated>2020-06-19T02:43:00.518Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;说明&quot;&gt;&lt;a href=&quot;#说明&quot; class=&quot;headerlink&quot; title=&quot;说明&quot;&gt;&lt;/a&gt;说明&lt;/h1&gt;&lt;p&gt;最近准备在投简历，也是总结总结一下C语言的基础知识，做一些准备。首先说明，下文后面所做的所有的实验都是在win10_1909_x64环境下，gcc version 8.1.0 (x86_64-posix-seh-rev0, Built by MinGW-W64 project)，软件使用的是VSCode。在C语言多线程的使用中，在VSCode配置好了C语言的基本环境之后就能直接使用了。&lt;/p&gt;
&lt;h1 id=&quot;C语言的字与字节&quot;&gt;&lt;a href=&quot;#C语言的字与字节&quot; class=&quot;headerlink&quot; title=&quot;C语言的字与字节&quot;&gt;&lt;/a&gt;C语言的字与字节&lt;/h1&gt;
    
    </summary>
    
    
      <category term="The C language" scheme="https://Homepea7.github.io/categories/The-C-language/"/>
    
    
      <category term="The C language" scheme="https://Homepea7.github.io/tags/The-C-language/"/>
    
      <category term="Some basics" scheme="https://Homepea7.github.io/tags/Some-basics/"/>
    
      <category term="Variable length" scheme="https://Homepea7.github.io/tags/Variable-length/"/>
    
  </entry>
  
  <entry>
    <title>C语言实现CRC检验</title>
    <link href="https://homepea7.github.io/2020/17.C-CRC/"/>
    <id>https://homepea7.github.io/2020/17.C-CRC/</id>
    <published>2020-05-28T10:17:51.000Z</published>
    <updated>2020-06-17T14:23:40.000Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;说明&quot;&gt;&lt;a href=&quot;#说明&quot; class=&quot;headerlink&quot; title=&quot;说明&quot;&gt;&lt;/a&gt;说明&lt;/h1&gt;&lt;p&gt;之前在做一个项目的时候，为了保证数据的准确性，用到了CRC检验，现在将其总结一下，顺便也复习一下。首先说一下CRC校验，他的全称是循环冗余校验（cyclic redundancy check）。CRC检验的基本思想是利用线性编码理论，在发送端根据要传送的k位二进制码序列，以一定的规则产生一个检验码r位(就是CRC码)，附在信息后面，构成一个新的二进制码序列数共(k+r)位，最后发送出去。接收端根据同样的规则校验，以确定传送中是否出错。接收端有两种处理方式：1、计算k位序列的CRC码，与接收到的CRC比较，一致则接收正确。2、计算整个k+r位的CRC码，若为0，则接收正确。CRC码有多种检验位数，8位、16位、32位等，原理相同。16位的CRC码产生的规则是先将要发送的二进制序列数左移16位（即乘以2的16次方后），除以一个多项式，最后所得到的余数就是CRC码。&lt;/p&gt;
&lt;p&gt;不说复杂了，CRC 算法的基本思想是将传输的数据当做一个位数很长的数，将这个数除以另一个数，得到的余数作为校验数据附加到原数据后面。除法采用正常的多项式乘除法，而加减法都采用模2运算。模2运算就是结果除以2后取余数，如 3 mod 2 = 1，在计算机中就是异或运算！下面举例说一下：&lt;/p&gt;
    
    </summary>
    
    
      <category term="The C language" scheme="https://Homepea7.github.io/categories/The-C-language/"/>
    
    
      <category term="The C language" scheme="https://Homepea7.github.io/tags/The-C-language/"/>
    
      <category term="CRC Check" scheme="https://Homepea7.github.io/tags/CRC-Check/"/>
    
  </entry>
  
  <entry>
    <title>在51和STM32单片机上分别实现任意串口的类似printf操作</title>
    <link href="https://homepea7.github.io/2020/16.C-uprintf/"/>
    <id>https://homepea7.github.io/2020/16.C-uprintf/</id>
    <published>2020-05-28T04:12:12.000Z</published>
    <updated>2020-05-28T10:21:38.000Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;说明&quot;&gt;&lt;a href=&quot;#说明&quot; class=&quot;headerlink&quot; title=&quot;说明&quot;&gt;&lt;/a&gt;说明&lt;/h1&gt;&lt;p&gt;这个是在本科的时候就弄好了，最近整理本科的一些文件的时候又看到了这些，如是准备做一些小结，也是给自己回忆一下。在51和STM32两款单片机实现C语言自带的printf操作，打印在串口中断，或者用于串口的通讯，下面是具体的操作。&lt;/p&gt;
&lt;h1 id=&quot;关于串行和并行&quot;&gt;&lt;a href=&quot;#关于串行和并行&quot; class=&quot;headerlink&quot; title=&quot;关于串行和并行&quot;&gt;&lt;/a&gt;关于串行和并行&lt;/h1&gt;
    
    </summary>
    
    
      <category term="Embedded development" scheme="https://Homepea7.github.io/categories/Embedded-development/"/>
    
    
      <category term="The C language" scheme="https://Homepea7.github.io/tags/The-C-language/"/>
    
      <category term="SingleChip" scheme="https://Homepea7.github.io/tags/SingleChip/"/>
    
      <category term="Uart" scheme="https://Homepea7.github.io/tags/Uart/"/>
    
      <category term="51" scheme="https://Homepea7.github.io/tags/51/"/>
    
      <category term="STM32" scheme="https://Homepea7.github.io/tags/STM32/"/>
    
  </entry>
  
  <entry>
    <title>VSCode画图神器--Drawio</title>
    <link href="https://homepea7.github.io/2020/15.VSCode-Drawio/"/>
    <id>https://homepea7.github.io/2020/15.VSCode-Drawio/</id>
    <published>2020-05-19T02:03:41.000Z</published>
    <updated>2020-05-19T02:32:38.000Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;说明&quot;&gt;&lt;a href=&quot;#说明&quot; class=&quot;headerlink&quot; title=&quot;说明&quot;&gt;&lt;/a&gt;说明&lt;/h1&gt;&lt;p&gt;论文中画矢量图基本是刚需了，还有流程图也是经常用到的，微软家的Visio老是感觉怪怪的，画出来的图嵌入Word会自动缩放，因此字体大小也不对，所以我是直接放弃了一般用AI，前几天看VSCode的插件，发现VSCode居然也能画图，没错，你没看错，VSCode居然也能敲代码！&lt;/p&gt;
&lt;p&gt;好了不开玩笑了，介绍今天的主角：Drawio。它本身是一个网页版的应用，跟我以前用的&lt;a href=&quot;https://www.processon.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Process On&lt;/a&gt;差不多的，烦人的是他限制画图个数，后来就放弃了。后来发现了Draw i哦，而且一位来自德国前端工程师Henning Dieterichs成功将 &lt;a href=&quot;http://draw.io&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;draw.io&lt;/a&gt; 的功能集成进了 VSCode，并打包成了插件供开发者下载使用，让你分分钟能用 VSCode 画出完美的流程图、思维导图与UML图，也有SVG矢量图的版本，十分好用，大家可以先去网页版试试功能，还可以设置语言，有简体中文。不仅如此，&lt;a href=&quot;http://draw.io&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;draw.io&lt;/a&gt; 还支持将图形保存到 Google Drive、One Drive 等云端硬盘上，如果你正在用这些云盘的话那就太方便了。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Latex" scheme="https://Homepea7.github.io/categories/Latex/"/>
    
    
      <category term="VsCode" scheme="https://Homepea7.github.io/tags/VsCode/"/>
    
      <category term="Drawio" scheme="https://Homepea7.github.io/tags/Drawio/"/>
    
  </entry>
  
  <entry>
    <title>使用VScode与MiKTex写论文</title>
    <link href="https://homepea7.github.io/2020/14.VSCode-Latex/"/>
    <id>https://homepea7.github.io/2020/14.VSCode-Latex/</id>
    <published>2020-05-14T11:46:13.000Z</published>
    <updated>2020-06-18T02:27:59.608Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;说明&quot;&gt;&lt;a href=&quot;#说明&quot; class=&quot;headerlink&quot; title=&quot;说明&quot;&gt;&lt;/a&gt;说明&lt;/h1&gt;&lt;p&gt;研究生了，于是写Latex的文档也比较多，之前同学们之间推荐的都是使用的Ctex，在 CTeX 套装刚刚问世之时，因其解决了繁琐的中文字体安装工作，所以广受欢迎，但是，一方面 CTeX 套装已经很久不更新，内里的宏包、工具陈旧。不过个人感觉太臃肿，而且安装要接近4G的样子，而且自带的编辑器界面是真的丑。于是就去扒了一下，发现其实就是使用MikTex编译和生成的，于是下载了MikTex的原版软件安装了试试，安装完了之后800M不到，虽然界面也比较难看，不过比Ctex好，而且非常简洁，还自带了PDF的阅读器，他的放大镜用起来非常舒服，感觉还是挺不错的，也用了一段时间，最近看到了用VSCode配置，发现真的是非常的简单和方便，而且VSCode这个软件真的是越用越爽，于是搜了一些资料然后自己尝试了一下，做了这个记录。&lt;/p&gt;
&lt;h1 id=&quot;软件安装和配置&quot;&gt;&lt;a href=&quot;#软件安装和配置&quot; class=&quot;headerlink&quot; title=&quot;软件安装和配置&quot;&gt;&lt;/a&gt;软件安装和配置&lt;/h1&gt;
    
    </summary>
    
    
      <category term="Latex" scheme="https://Homepea7.github.io/categories/Latex/"/>
    
    
      <category term="Latex" scheme="https://Homepea7.github.io/tags/Latex/"/>
    
      <category term="VsCode" scheme="https://Homepea7.github.io/tags/VsCode/"/>
    
      <category term="MiKTeX" scheme="https://Homepea7.github.io/tags/MiKTeX/"/>
    
  </entry>
  
  <entry>
    <title>安卓手机免root使用ADB命令卸载预装软件（去广告）</title>
    <link href="https://homepea7.github.io/2020/13.ADB-Shell/"/>
    <id>https://homepea7.github.io/2020/13.ADB-Shell/</id>
    <published>2020-05-09T02:23:13.000Z</published>
    <updated>2020-05-14T11:45:14.000Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;说明&quot;&gt;&lt;a href=&quot;#说明&quot; class=&quot;headerlink&quot; title=&quot;说明&quot;&gt;&lt;/a&gt;说明&lt;/h1&gt;&lt;p&gt;最近很幸运的拿到一台小米6（还能再战三年），于是开始小折腾了半天，对比IOS的话感觉MIUI还是有很多好的地方的，不过系统广告实在难忍，在哪都有广告和推送，于是想到办法去广告。以前在&lt;a href=&quot;https://www.52pojie.cn/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;我爱破解&lt;/a&gt;看到过相关的内容，于是就去搜了一下，网上教程一大堆，于是在这里做一个小小的记录。本机部分参数如下：小米6，MIUI版本为MIUI10 9.9.3，基于安卓9的，刷的开发板但是没有开启root（官网上面的开发板暂时不会提示更新）。&lt;/p&gt;
&lt;h1 id=&quot;开发者选项&quot;&gt;&lt;a href=&quot;#开发者选项&quot; class=&quot;headerlink&quot; title=&quot;开发者选项&quot;&gt;&lt;/a&gt;开发者选项&lt;/h1&gt;
    
    </summary>
    
    
      <category term="ADB" scheme="https://Homepea7.github.io/categories/ADB/"/>
    
    
      <category term="ADB" scheme="https://Homepea7.github.io/tags/ADB/"/>
    
      <category term="系统去广告" scheme="https://Homepea7.github.io/tags/%E7%B3%BB%E7%BB%9F%E5%8E%BB%E5%B9%BF%E5%91%8A/"/>
    
      <category term="root" scheme="https://Homepea7.github.io/tags/root/"/>
    
  </entry>
  
  <entry>
    <title>Adobe Premiere使两段视频分辨率一致</title>
    <link href="https://homepea7.github.io/2020/12.PR-Resolution/"/>
    <id>https://homepea7.github.io/2020/12.PR-Resolution/</id>
    <published>2020-04-24T14:23:13.000Z</published>
    <updated>2020-05-09T01:15:22.000Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;说明&quot;&gt;&lt;a href=&quot;#说明&quot; class=&quot;headerlink&quot; title=&quot;说明&quot;&gt;&lt;/a&gt;说明&lt;/h1&gt;&lt;p&gt;最近学习剪视频，我下了一个4K的白蛇：缘起，然后学习B站大佬的&lt;a href=&quot;https://www.bilibili.com/video/BV1HJ411h78u&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;水墨转场&lt;/a&gt;跟着做，下载了他的水墨素材，然后发现分辨率不对应，如下图所示，记录一下解决的办法。&lt;br&gt;&lt;img src=&quot;/images/Premiere/P1.png&quot; alt=&quot;P1&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;原因分析&quot;&gt;&lt;a href=&quot;#原因分析&quot; class=&quot;headerlink&quot; title=&quot;原因分析&quot;&gt;&lt;/a&gt;原因分析&lt;/h1&gt;
    
    </summary>
    
    
      <category term="Premiere" scheme="https://Homepea7.github.io/categories/Premiere/"/>
    
    
      <category term="Premiere" scheme="https://Homepea7.github.io/tags/Premiere/"/>
    
  </entry>
  
  <entry>
    <title>树莓派使用SSH远程连接</title>
    <link href="https://homepea7.github.io/2020/11.Raspberry-SSH/"/>
    <id>https://homepea7.github.io/2020/11.Raspberry-SSH/</id>
    <published>2020-03-03T03:03:06.000Z</published>
    <updated>2020-03-03T03:22:16.000Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;说明&quot;&gt;&lt;a href=&quot;#说明&quot; class=&quot;headerlink&quot; title=&quot;说明&quot;&gt;&lt;/a&gt;说明&lt;/h1&gt;&lt;p&gt;上一次说到了使用USB网卡连接Wi-Fi，这样可以正常联网和下载程序，但是有一点比较麻烦的是需要串口，是有线的连接，比较麻烦，而使用SSH的话就可以远程使用了，非常的方便，下面做一个简单地介绍。&lt;/p&gt;
&lt;h1 id=&quot;开启SSH&quot;&gt;&lt;a href=&quot;#开启SSH&quot; class=&quot;headerlink&quot; title=&quot;开启SSH&quot;&gt;&lt;/a&gt;开启SSH&lt;/h1&gt;
    
    </summary>
    
    
      <category term="RaspberryPi" scheme="https://Homepea7.github.io/categories/RaspberryPi/"/>
    
    
      <category term="RaspberryPi" scheme="https://Homepea7.github.io/tags/RaspberryPi/"/>
    
      <category term="SSH" scheme="https://Homepea7.github.io/tags/SSH/"/>
    
  </entry>
  
  <entry>
    <title>树莓派使用USB网卡连接无线网络</title>
    <link href="https://homepea7.github.io/2020/10.Raspberry-USBPort/"/>
    <id>https://homepea7.github.io/2020/10.Raspberry-USBPort/</id>
    <published>2020-03-02T15:00:08.000Z</published>
    <updated>2020-03-05T06:04:09.000Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;说明&quot;&gt;&lt;a href=&quot;#说明&quot; class=&quot;headerlink&quot; title=&quot;说明&quot;&gt;&lt;/a&gt;说明&lt;/h1&gt;&lt;p&gt;前面说过，我买到的这个树莓派是一代A+，没网口，Wi-Fi和蓝牙也都没有，就仅仅只有一个USB接口，资源少的可怜，怎么办呢，手里闲置的USB网卡刚刚好可以用到了。这个网卡是802.11/n的，免驱，插上就能用。于是网上爬了一些内容，也顺利连接了家里的Wi-Fi，感觉美滋滋~~&lt;/p&gt;
&lt;p&gt;说明一下，一代树莓派A+的功耗非常低，但是线材还是要有保障的，今天刚刚连接USB网卡的时候开机一直提示低电压保护，虽然可以使用但是我担心后面会出问题，所以换了一根线，完美解决！参考威胁电子的统计资料，这个型号功耗在3.5W左右，但是这里建议还是使用5V2A及以上的供电！&lt;/p&gt;
    
    </summary>
    
    
      <category term="RaspberryPi" scheme="https://Homepea7.github.io/categories/RaspberryPi/"/>
    
    
      <category term="RaspberryPi" scheme="https://Homepea7.github.io/tags/RaspberryPi/"/>
    
      <category term="USBPort" scheme="https://Homepea7.github.io/tags/USBPort/"/>
    
      <category term="Wi-Fi" scheme="https://Homepea7.github.io/tags/Wi-Fi/"/>
    
  </entry>
  
  <entry>
    <title>使用串口终端访问树莓派</title>
    <link href="https://homepea7.github.io/2020/09.Raspberry-Serial/"/>
    <id>https://homepea7.github.io/2020/09.Raspberry-Serial/</id>
    <published>2020-03-02T14:12:59.000Z</published>
    <updated>2020-03-02T14:57:54.000Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;说明&quot;&gt;&lt;a href=&quot;#说明&quot; class=&quot;headerlink&quot; title=&quot;说明&quot;&gt;&lt;/a&gt;说明&lt;/h1&gt;&lt;p&gt;最近天天在家也没事儿干，淘宝倒是逛的挺多的，这两天看到一家店，本来想买一个猫盘组一台NAS的，最终只买了一个OpenWrt软路由和一块树莓派。说起这个树莓派那就很有意思了，一代A+，只有一个USB口，一个HDMI，一个音频输出好一个MicroUSB供电，没有带网口，因此操作起来就比较麻烦了，但是，记住但是，真的便宜，只要38块RMB，还是512M的内存，然后开始了今天的内容，使用串口访问树莓派。这样做的好处是省出来那个USB口，后来知道可以接免驱的USB网卡，刚刚好，开启SSH的话串口都不需要，美滋滋&lt;del&gt;~&lt;/del&gt;&lt;/p&gt;
&lt;h1 id=&quot;配置串口终端&quot;&gt;&lt;a href=&quot;#配置串口终端&quot; class=&quot;headerlink&quot; title=&quot;配置串口终端&quot;&gt;&lt;/a&gt;配置串口终端&lt;/h1&gt;
    
    </summary>
    
    
      <category term="RaspberryPi" scheme="https://Homepea7.github.io/categories/RaspberryPi/"/>
    
    
      <category term="RaspberryPi" scheme="https://Homepea7.github.io/tags/RaspberryPi/"/>
    
      <category term="Serial" scheme="https://Homepea7.github.io/tags/Serial/"/>
    
  </entry>
  
  <entry>
    <title>Latex参考文献双栏对齐</title>
    <link href="https://homepea7.github.io/2020/08.Latex-References/"/>
    <id>https://homepea7.github.io/2020/08.Latex-References/</id>
    <published>2020-03-01T03:28:28.000Z</published>
    <updated>2020-03-01T03:54:35.000Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;说明&quot;&gt;&lt;a href=&quot;#说明&quot; class=&quot;headerlink&quot; title=&quot;说明&quot;&gt;&lt;/a&gt;说明&lt;/h1&gt;&lt;p&gt;参考文献部分，如果在最后单页而且是单栏就会非常不好看，双栏就会好很多，效果如下。其实现的方法非常简单，有两种，介绍如下&lt;br&gt;&lt;img src=&quot;/images/Latex/1.1Ref.png&quot; alt=&quot;Ref&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;方法一：balance&quot;&gt;&lt;a href=&quot;#方法一：balance&quot; class=&quot;headerlink&quot; title=&quot;方法一：balance&quot;&gt;&lt;/a&gt;方法一：balance&lt;/h1&gt;
    
    </summary>
    
    
      <category term="Latex" scheme="https://Homepea7.github.io/categories/Latex/"/>
    
    
      <category term="Latex" scheme="https://Homepea7.github.io/tags/Latex/"/>
    
  </entry>
  
  <entry>
    <title>通过更改Hosts解决Github进不去</title>
    <link href="https://homepea7.github.io/2020/06.GitHub-SpeedUp/"/>
    <id>https://homepea7.github.io/2020/06.GitHub-SpeedUp/</id>
    <published>2020-02-20T03:01:41.000Z</published>
    <updated>2020-02-21T02:50:11.000Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;说明&quot;&gt;&lt;a href=&quot;#说明&quot; class=&quot;headerlink&quot; title=&quot;说明&quot;&gt;&lt;/a&gt;说明&lt;/h1&gt;&lt;p&gt;最近在家上GitHub还算比较多，但是发现经常进不去，最近的梯子也进本都挂了，导致GitHub有时候进不去，然后去网上搜了很多办法，发现效果还比较好，在这里做一个小小的总结和分享。&lt;/p&gt;
&lt;h1 id=&quot;原因分析&quot;&gt;&lt;a href=&quot;#原因分析&quot; class=&quot;headerlink&quot; title=&quot;原因分析&quot;&gt;&lt;/a&gt;原因分析&lt;/h1&gt;
    
    </summary>
    
    
      <category term="GitHub" scheme="https://Homepea7.github.io/categories/GitHub/"/>
    
    
      <category term="GitHub" scheme="https://Homepea7.github.io/tags/GitHub/"/>
    
      <category term="Hosts" scheme="https://Homepea7.github.io/tags/Hosts/"/>
    
  </entry>
  
  <entry>
    <title>使用Termux给旧手机安装Ubuntu</title>
    <link href="https://homepea7.github.io/2020/05.Termux/"/>
    <id>https://homepea7.github.io/2020/05.Termux/</id>
    <published>2020-02-15T11:19:53.000Z</published>
    <updated>2020-02-20T15:01:59.000Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;说明&quot;&gt;&lt;a href=&quot;#说明&quot; class=&quot;headerlink&quot; title=&quot;说明&quot;&gt;&lt;/a&gt;说明&lt;/h1&gt;&lt;p&gt;今年武汉的疫情非常严重，已经好多天没有出门了，东西也有好多都在学校，有点想搞事情，本身想买一个树莓派跑跑Ubuntu玩玩的，快递实在是太慢了，而且回家的大东西就带了电脑，其他的硬件基本都没有，没有办法只能从身边的旧手机入手了。我手上有两个旧的，一个是小米Note，说实话我非常喜欢的，外形和手感都非常好，但是换屏之后屏幕跳屏（后来在我调试的过程中忍不了给摔了2333）；另一台是荣耀8，华为的BL锁现在不能解开了，因此没有Root权限（感觉华为这件事儿很恶心）。我花了好长时间去解锁（其实就是不想去淘宝花30块钱），但是都没有成功，因此一直都搁置在，今天还是给拿出来了试试，终于成功在没有root权限的情况下安装了ubuntu，并且通过SSH连接上去了，可以跑一些Python程序，感觉还是很开心的，下面说说具体的过程。&lt;/p&gt;
&lt;h1 id=&quot;准备&quot;&gt;&lt;a href=&quot;#准备&quot; class=&quot;headerlink&quot; title=&quot;准备&quot;&gt;&lt;/a&gt;准备&lt;/h1&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="https://Homepea7.github.io/categories/Linux/"/>
    
    
      <category term="Termux" scheme="https://Homepea7.github.io/tags/Termux/"/>
    
      <category term="AnLinux" scheme="https://Homepea7.github.io/tags/AnLinux/"/>
    
      <category term="ubuntu" scheme="https://Homepea7.github.io/tags/ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>2020肺炎实时疫情图(置顶)</title>
    <link href="https://homepea7.github.io/2020/00.WuHan/"/>
    <id>https://homepea7.github.io/2020/00.WuHan/</id>
    <published>2020-02-10T06:27:55.000Z</published>
    <updated>2020-02-21T02:48:16.000Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;iframe src=&quot;https://www.lovestu.com/api/project/cnmapyinqing/obj.php&quot; height=&quot;500&quot; frameborder=&quot;no&quot; border=&quot;0&quot; width=&quot;100%&quot;&gt;
        
      
    
    </summary>
    
    
    
      <category term="WuHan" scheme="https://Homepea7.github.io/tags/WuHan/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode做题的记录</title>
    <link href="https://homepea7.github.io/2020/04.LeetCode/"/>
    <id>https://homepea7.github.io/2020/04.LeetCode/</id>
    <published>2020-02-09T14:11:19.000Z</published>
    <updated>2020-02-09T13:55:36.000Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h1 id=&quot;说明&quot;&gt;&lt;a href=&quot;#说明&quot; class=&quot;headerlink&quot;
        
      
    
    </summary>
    
    
      <category term="LeetCode" scheme="https://Homepea7.github.io/categories/LeetCode/"/>
    
    
      <category term="LeetCode" scheme="https://Homepea7.github.io/tags/LeetCode/"/>
    
      <category term="C" scheme="https://Homepea7.github.io/tags/C/"/>
    
      <category term="C++" scheme="https://Homepea7.github.io/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>Git上传本地代码到GitHub</title>
    <link href="https://homepea7.github.io/2020/03.Git-Commit/"/>
    <id>https://homepea7.github.io/2020/03.Git-Commit/</id>
    <published>2020-02-09T13:31:34.000Z</published>
    <updated>2020-02-10T06:41:36.000Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;说明&quot;&gt;&lt;a href=&quot;#说明&quot; class=&quot;headerlink&quot; title=&quot;说明&quot;&gt;&lt;/a&gt;说明&lt;/h1&gt;&lt;p&gt;本文仅仅是介绍几条简单的指令，将本地的代码上传到GitHub，免得老是忘记，因此写了这篇博文，内容比较简单。&lt;/p&gt;
&lt;h1 id=&quot;安装Git，创建码仓&quot;&gt;&lt;a href=&quot;#安装Git，创建码仓&quot; class=&quot;headerlink&quot; title=&quot;安装Git，创建码仓&quot;&gt;&lt;/a&gt;安装Git，创建码仓&lt;/h1&gt;
    
    </summary>
    
    
      <category term="GitHub" scheme="https://Homepea7.github.io/categories/GitHub/"/>
    
    
      <category term="git" scheme="https://Homepea7.github.io/tags/git/"/>
    
      <category term="commit code" scheme="https://Homepea7.github.io/tags/commit-code/"/>
    
  </entry>
  
  <entry>
    <title>记录Hexo建站</title>
    <link href="https://homepea7.github.io/2020/02.Hexo+Next/"/>
    <id>https://homepea7.github.io/2020/02.Hexo+Next/</id>
    <published>2020-02-05T12:09:02.000Z</published>
    <updated>2020-03-03T02:51:18.000Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;之前一直想做一个自己的网站，也买了域名，最开始看了果核的建站教程，觉得基于&lt;a href=&quot;https://zh-cn.wordpress.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;WordPress&lt;/a&gt;的非常方便，但是搭建除了买域名之外还需要虚拟主机，费用比较高。作为一名屌丝研究生呢，肯定是要选择便宜的呀，然后问了我&lt;a href=&quot;http://begild.top/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;队友&lt;/a&gt;，决定用&lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;试试。&lt;/p&gt;
&lt;p&gt;最初它推荐的是国内的&lt;a href=&quot;https://coding.net/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Coding&lt;/a&gt;上面建站，访问速度比&lt;a href=&quot;https://github.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Github&lt;/a&gt;快，我也网站找了很多教程，很多人也都是这样说，因此我开始了很多的摸爬滚打，但是最后还是选择了Github，毕竟是全球最大的同性交友网站嘛，这里提一句在B站找到了一些教程用的Linux，我这里是用的Window10，其实在linux是一样的操作，只是相应的文件目录不一样而已。说到底呢其实主要是记录和学习用的，以后看到自己的博客可能也会觉得自己很有意思的吧。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Hexo" scheme="https://Homepea7.github.io/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="https://Homepea7.github.io/tags/Hexo/"/>
    
      <category term="Next" scheme="https://Homepea7.github.io/tags/Next/"/>
    
  </entry>
  
</feed>
